# GitHub Actions CI for carrardt/h264-tools fork
name: Build Windows Executables

on:
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest

    defaults:
      run:
        shell: msys2 {0}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up MSYS2
      uses: msys2/setup-msys2@v2
      with:
        update: true
        install: >-
          git
          mingw-w64-x86_64-toolchain
          mingw-w64-x86_64-cmake
          make

    - name: Patch CMake minimum version
      run: |
        sed -i 's/cmake_minimum_required(VERSION [0-9]\.[0-9]\+)/cmake_minimum_required(VERSION 3.5)/' CMakeLists.txt

    - name: Patch source for Windows I/O and remove conflicts
      run: |
        # Insert Windows I/O definitions
        sed -i '1i#ifdef _WIN32' tools/naluparser.c
        sed -i '2i#include <io.h>' tools/naluparser.c
        sed -i '3i#include <fcntl.h>' tools/naluparser.c
        sed -i '4i#define read _read' tools/naluparser.c
        sed -i '5i#define write _write' tools/naluparser.c
        sed -i '6i#ifndef O_NONBLOCK' tools/naluparser.c
        sed -i '7i#define O_NONBLOCK 0' tools/naluparser.c
        sed -i '8i#endif' tools/naluparser.c

        sed -i '1i#ifdef _WIN32' tools/yuvsbspipe.c
        sed -i '2i#include <io.h>' tools/yuvsbspipe.c
        sed -i '3i#include <fcntl.h>' tools/yuvsbspipe.c
        sed -i '4i#define read _read' tools/yuvsbspipe.c
        sed -i '5i#define write _write' tools/yuvsbspipe.c
        sed -i '6i#ifndef O_NONBLOCK' tools/yuvsbspipe.c
        sed -i '7i#define O_NONBLOCK 0' tools/yuvsbspipe.c
        sed -i '8i#endif' tools/yuvsbspipe.c

        # Remove conflicting typedefs in win32.h
        sed -i '/typedef int   intptr_t;/d' ldecod/win32.h
        sed -i '/# *define *strcasecmp _strcmpi/d' ldecod/win32.h

        # Make global ColorComponent and cfgparams static to avoid multiple definitions
        sed -i 's/^int \(ColorComponent\);$/static int \1;/' ldecod/annexb.c
        sed -i 's/^cfgparams_t cfgparams;$/static cfgparams_t cfgparams;/' ldecod/configfile.c

        # Include winsock2 and link ws2_32 for ntohs/ntohl
        sed -i '1i#ifdef _WIN32' ldecod/rtp.c
        sed -i '2i#include <winsock2.h>' ldecod/rtp.c
        sed -i '3i#include <ws2tcpip.h>' ldecod/rtp.c

        sed -i '/add_executable(ldecod/ a\
if (WIN32) target_link_libraries(ldecod PRIVATE ws2_32)\n' CMakeLists.txt

    - name: Create build directory
      run: mkdir -p build

    - name: Configure project
      run: |
        cmake -G "MinGW Makefiles" -DCMAKE_POLICY_VERSION_MINIMUM=3.5 -S . -B build

    - name: Build
      run: cmake --build build -- -j$(nproc)

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: h264-tools-windows
        path: build/*.exe
